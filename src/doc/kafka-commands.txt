Kafka Commands

0) Start Linux Ubuntu on Windows 11

	wsl

1) Starting Zookeeper and Apache Kafka:

	echo "Starting ZooKeeper on background..."
	zookeeper-server-start.sh ~/kafka_2.13-3.0.0/config/zookeeper.properties &

	echo "Sleeping 15 seconds..."
	sleep 15

	echo "Starting Kafka..."
	kafka-server-start.sh ~/kafka_2.13-3.0.0/config/server.properties


2) If you want to produce and consume a message:

	Open 3 terminals:

	Terminal 1) run Kafka

	Terminal 2) CONSUMER
	bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic my-first-topic

	Terminal 3) PRODUCER
	bin/kafka-console-producer.sh --bootstrap-server localhost:9092 --topic my-first-topic


3) Stop Apache Kafka and Zookeeper

	echo "Stopping Kafka..."
	kafka-server-stop.sh

	echo "Stopping ZooKeeper..."
	zookeeper-server-stop.sh


4) Creating a topic

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic my-new-topic --partitions 3 --replication-factor 1


5) Listing topics

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --list


6) Describing a topic

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic my-first-topic
	Topic: my-first-topic   TopicId: GvTMrorRRHq17IUwPD4Z4w PartitionCount: 1       ReplicationFactor: 1    Configs: segment.bytes=1073741824
			Topic: my-first-topic   Partition: 0    Leader: 0       Replicas: 0     Isr: 0

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic my-new-topic
	Topic: my-new-topic     TopicId: ufKmdFe1R7Wz05tGfB9pqQ PartitionCount: 3       ReplicationFactor: 1    Configs: segment.bytes=1073741824
			Topic: my-new-topic     Partition: 0    Leader: 0       Replicas: 0     Isr: 0
			Topic: my-new-topic     Partition: 1    Leader: 0       Replicas: 0     Isr: 0
			Topic: my-new-topic     Partition: 2    Leader: 0       Replicas: 0     Isr: 0


7) Editing a topic

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --alter --topic my-first-topic --partitions 3

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic my-first-topic
	Topic: my-first-topic   TopicId: GvTMrorRRHq17IUwPD4Z4w PartitionCount: 3       ReplicationFactor: 1    Configs: segment.bytes=1073741824
			Topic: my-first-topic   Partition: 0    Leader: 0       Replicas: 0     Isr: 0
			Topic: my-first-topic   Partition: 1    Leader: 0       Replicas: 0     Isr: 0
			Topic: my-first-topic   Partition: 2    Leader: 0       Replicas: 0     Isr: 0


8) Deleting a topic

	bin/kafka-topics.sh --bootstrap-server localhost:9092 --delete --topic my-new-topic

9) Consumer Group Tools

	Terminal 1)

	# Create topic and describe it
	bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic consumer-group-demo --partitions 5 --replication-factor 1
	bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic consumer-group-demo

	# List all consumer groups:
	bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list

	# Run the command below, then run the command on Terminal 2, run the command below again, then run the command on Terminal 3
	# and you will see the rebalance happening :)
	bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group my-new-group
	
	# More details about the consumer group
	bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group my-new-group --state

	# More details about the members of the consumer group
	bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group my-new-group --members

	Terminal 2)

	# Create a new consumer
	bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic consumer-group-demo --group my-new-group

	Terminal 3)

	# Create a new consumer
	bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic consumer-group-demo --group my-new-group
